#!/bin/bash

#
# Script to manage dependencies before run podman-compose.
#

# COMPOSE_FILE='docker-compose-exp.yml'
COMPOSE_FILE='docker-compose.yml'

test -x $(command -v podman-compose) || { \
  echo "podman-compose is not installed, please install it: pip3 install podman-compose" \
  && exit 1; \
}

test -z "${WORKDIR}" && { \
  echo "WORKDIR env var not found. Please set the workdir" \
  && exit 1; \
}

test -f ./.env || { \
  echo ".env file not found, creating from .env-default..." \
  && cp ./.env-default ./.env
}

function deps_dirs() {
  echo "WORKDIR=${WORKDIR}"
  test -d "${WORKDIR}" || mkdir -p "${WORKDIR}" ;
  for SUB in grafana prometheus influxdb loki; do
    test -d "${WORKDIR}/${SUB}" || mkdir "${WORKDIR}/${SUB}";
  done
  # Reinforce permissions (may changed by containes on runtime)

  sudo rm -rf ${WORKDIR}/grafana/png/
}

function deps_perms() {
  chmod -R o+w "${WORKDIR}/"
}

function cmd_up() {
  deps_dirs;
  deps_perms;
  podman-compose -f ${COMPOSE_FILE} up -d
}

function cmd_down() {
  podman-compose -f ${COMPOSE_FILE} down;
}

function cmd_clean() {
   podman pod rm -f must-gather-monitoring
}

case $1 in
  "up") cmd_up ;;
  "down") cmd_down ;;
  "clean") cmd_clean ;;
  *) echo "Invalid option [$1]. Accept: up|down|clean" ;;
esac
